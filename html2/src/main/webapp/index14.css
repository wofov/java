@charset "UTF-8";
body{margin: 0; padding: 0;}
span,label {display: block;}
.box1{width: 100px; height: 100px; background-color: orange;
padding-left:50px;
}
.box2{width: 100px; height: 100px; background-color: green;
padding-left:50px; box-sizing: border-box;
}/*box-sizing: border-box : padding,border적용 되어짐 */
.box3{width: 100px; height: 100px; border: 1px solid red;/*102size*/}
.box4{width: 100px; height: 100px; border: 1px solid red/*100size*/;
box-sizing: border-box;}

/*
nth-child (DOM)
nth-of-type (NODE)
*/
.ulcss > li:nth-child(1){
	color:red;}
.ulcss > li:nth-child(2){
	color:red;}
.ulcss > li:nth-child(5){
	color:red;}

.olcss > li:nth-of-type(2){
	color:blue;}
.olcss > li:nth-of-type(3){
	color:blue;}

/*DOM(자식태그를 순서대로 나열함) */
.div1 > span:nth-child(3) {
	color:red;}/*이러면 빨간색으로 안변함.*/
.div1 > span:nth-child(4) {
	color:red;}/*이려면 변함*/
/*NODE 태그끼리 별도로 node숫자를 나열함*/
.div2 > span:nth-of-type(3) {
	color:red;}
.div2 > label:nth-of-type(2) {
	color:red;}

/*DOM*/
.object1{}
.object1 > span{
	width: 50px;
	height: 50px;
	background: black;
}
.object1 > span:nth-child(2){
	background-color: yellow;
}
/*odd 홀수번호, even 짝수번호*/
.object1 > span:nth-child(odd){background-color: blue;}


/*NODE*/
.object2{}/*이렇게 비워놔도 object2 값이 있어야함. */
.object2 > span, .object2 > label{
	width: 50px;
	height: 50px;
	background-color: green;	
}
.object2 > span:nth-of-type(even), .object > label:nth-of-type(odd){
    	background-color: purple;
}
/*odd 홀수번호, even 짝수번호*/
.object2 > span:nth-of-type(odd){}



